/*

  ******************************************************************************
  * @file 			( фаил ):   analog_scale.h
  * @brief 		( описание ):  	
  ******************************************************************************
  * @attention 	( внимание ):  	author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
  ******************************************************************************
  
  для работы подключаем в проект #include "analog_scale.h"
  
  ///////////  рисуем циферблат в виде окружности   //////////////////////////
	
	 analogMeter(); // рисуем интерфейс циферблата ( 1 раз при старте )
	 
	 HAL_Delay (1500);
	 
	 // вызываем функцию plotNeedle(); 
	 // передаем 1 параметр само значение от 0 до 100
	 // передаем 2 параметр задержку ( задержку можно ставить 0 тогда ее делать отдельно )
	 for( int i = 0; i<100; i++){
		 plotNeedle(i, 0);
		 HAL_Delay (10);
	 }
	 for( int i = 100; i>=0; i--){
		 plotNeedle(i, 10);
		 //HAL_Delay (10);
	 }
	 
	//////////////////////////////////////////////////////////////////////////
	
	
		////  рисуем продолговатые от1 до 6 индикаторы //////////////////////////////////////////////////////////////////////////////
		
	 uint8_t d = 40;	// смещение каждого нового циферблата на 40 пикселей по координате х
	 plotLinear("A1", d*0, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A1" смещаем его по х на d*0 и по у на 10
	 plotLinear("A2", d*1, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A2" смещаем его по х на d*1 и по у на 10
	 plotLinear("A3", d*2, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A3" смещаем его по х на d*2 и по у на 10
	 plotLinear("A4", d*3, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A4" смещаем его по х на d*3 и по у на 10
	 plotLinear("A5", d*4, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A5" смещаем его по х на d*4 и по у на 10
	 plotLinear("A6", d*5, 10 );	// создаем и проресовываем 1 раз при старте циферблат с названием "A6" смещаем его по х на d*5 и по у на 10
	 // также при смещении по у или х ( для первого значения ) устанавливаем смещение и кол-во циферблатов в функции void plotPointer(void)
			 //int x = 0;	// устанавливаем смещение начального индикатора относительно х
			 //int y = 10; // устанавливаем смещение начального индикатора относительно у
			 //int count = 6; // устанавливаем кол-во индикаторов от 1 до 6
			 // далее заполняем массив value[] данными и потом выводим их на дисплей командой plotPointer();
			 
	 for( int i = 0; i<101; i++){
		 value[0] = i;
		 value[1] = 100-i;
		 value[2] = i;
		 value[3] = 100-i;
		 value[4] = i;
		 value[5] = 100-i;
		 plotPointer();
		 HAL_Delay (10);
	 }
	  
	HAL_Delay (1500);
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	 
	
	
*/

#ifndef _ANALOG_SCALE_H
#define _ANALOG_SCALE_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ----------------------------------------------------------*/
#include "stdint.h"
// Обязательно нужен #include "main.h" 
// чтоб отдельно не подключать файлы связанные с МК и стандартными библиотеками


extern int value[6];

// #########################################################################
// Обновление данных стрелки и значения на цифербладе ( функцию вызываем с задержкой не менее 10 мс )
// первый параметр передаем наше значение ( от -10 до 110 гнаницы )
// чтоб попадал в диапазон разметки на циферблате передаем от 0 до 100
// второй переметр время для следущего обновления, рекомендуеться ставить 0 и делать вызов функции с интервалом не менее 10 мс
// #########################################################################
void plotNeedle(int8_t value, uint8_t ms_delay);

// #########################################################################
// рисуем сам циферблат ( вызываем функцию 1 раз в начале )
// #########################################################################
void analogMeter(void);

// #########################################################################
//  рисуем вертикальную шкалу ( значение для показа от 0 до 100 )
//  первый параметр название шкалы ( например "A1" )
//  второй параметр координата х ( ширина шкалы 40 ) тоесть следующую шкалу рисуем х + 40
//  третий параметр координата у
// #########################################################################
void plotLinear(char *label, int x, int y);

// #########################################################################
//  функция опрашивает массив с данными и выводит их на экран
// #########################################################################
void plotPointer(void);

//------------------------------------------------------------------------------------


#ifdef __cplusplus
}
#endif

#endif	/*	_ANALOG_SCALE_H */

/************************ (C) COPYRIGHT GKP *****END OF FILE****/
